// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.

#include "AutonomousDriveForwardShoot.h"
#include "ChassisDriveDistanceStraight.h"
#include "ChassisDrivetoWallStraight.h"
#include "SetShooterSpeed.h"
#include "SetShooterAngle.h"
#include "FrisbeeShoot.h"

#define DISTANCE_FROM_WALL        120.0
#define DRIVE_POWER                 0.5

#define SHOOTER_VOLTAGE_MAXIMUM     1.0
#define SHOOTER_VOLTAGE             0.62
#define SHOOTER_ANGLE              39.2091  // 653.0

#define SHOOTER_WAIT                0.0

AutonomousDriveForwardShoot::AutonomousDriveForwardShoot() 
{
   // Drive Forward
   AddSequential(new ChassisDrivetoWallStraight(DISTANCE_FROM_WALL, DRIVE_POWER));
	
   // set shooter speed to maximum to reduce the ramp up time
   AddSequential(new SetShooterSpeed(SHOOTER_VOLTAGE_MAXIMUM, false), 1.0);
	
   // set the shooter angle
   AddSequential(new SetShooterAngle(SHOOTER_ANGLE), 3.0);
	
   // wait to ensure the angle is at the proper location
   AddSequential(new WaitCommand(1.0));
	
   // lower to shooter speed to the proper voltage
   AddParallel(new SetShooterSpeed(SHOOTER_VOLTAGE, false), 3.0);
	
   // wait for the shooter to settle
   AddSequential(new WaitCommand(2.0));
	
   // shoot 1st frisbee
   AddSequential(new FrisbeeShoot());
   
   // wait between shots
   AddSequential(new WaitCommand(SHOOTER_WAIT));
    
   // shoot 2nd frisbee
   AddSequential(new FrisbeeShoot());
    
   // wait between shots
   AddSequential(new WaitCommand(SHOOTER_WAIT));
    
   // shoot 3rd frisbee
   AddSequential(new FrisbeeShoot());
   
   // wait between shots
   AddSequential(new WaitCommand(SHOOTER_WAIT));
    
   // shoot "4 h" frisbee in case one missfired
   AddSequential(new FrisbeeShoot());
   
   // Stop the Shooter
   AddParallel(new SetShooterSpeed(0, false));
}
