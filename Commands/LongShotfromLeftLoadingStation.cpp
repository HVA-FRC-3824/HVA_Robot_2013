// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.



#include "LongShotfromLeftLoadingStation.h"
#include "SetShooterAngle.h"
#include "SetShooterSpeed.h"
#include "ChassisDriveDistanceStraight.h"
#include "ChassisTurnAngle.h"
#include "FrisbeeShoot.h"

#define BACK_UP_SPEED 		-0.2
#define BACK_UP_TIME		0.5
#define ROTATE_ANGLE		-150
#define SHOOTER_ANGLE		25.0
#define SHOOTER_SPEED		3600

LongShotfromLeftLoadingStation::LongShotfromLeftLoadingStation() {
	// Add Commands here:
	// e.g. AddSequential(new Command1());
	//      AddSequential(new Command2());
	// these will run in order.
	AddParallel(new SetShooterAngle(SHOOTER_ANGLE));
	AddParallel(new SetShooterSpeed(SHOOTER_SPEED, true));
	AddSequential(new ChassisDriveDistanceStraight(BACK_UP_TIME, BACK_UP_SPEED));
	AddSequential(new ChassisTurnAngle(ROTATE_ANGLE));
	AddSequential(new FrisbeeShoot()); //TODO: Actually shoot all four frisbees
	AddSequential(new ChassisTurnAngle(-ROTATE_ANGLE));
	AddSequential(new ChassisDriveDistanceStraight(-BACK_UP_TIME, BACK_UP_SPEED));

	// To run multiple commands at the same time,
	// use AddParallel()
	// e.g. AddParallel(new Command1());
	//      AddSequential(new Command2());
	// Command1 and Command2 will run in parallel.

	// A command group will require all of the subsystems that each member
	// would require.
	// e.g. if Command1 requires chassis, and Command2 requires arm,
	// a CommandGroup containing them would require both the chassis and the
	// arm.
}
