// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.

#include "TestSmartDashboard.h"
#include "AutonomousDoNothing.h"
#include "AutonomousShootFromCenter.h"
#include "AutonomousShootFromLeft.h"
#include "AutonomousShootFromRight.h"
TestSmartDashboard::TestSmartDashboard() 
{
   chooser = new SendableChooser();
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::testSubsystem);
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void TestSmartDashboard::Initialize() 
{
   
}

// Called repeatedly when this Command is scheduled to run
void TestSmartDashboard::Execute() 
{
	SmartDashboard::PutNumber("Shooter Angle", 0.0);
   SmartDashboard::PutNumber("Shooter Speed", 0.0);
   SmartDashboard::PutBoolean("Top Hook 1 Engage State", false);
   SmartDashboard::PutBoolean("Top Hook 2 Engage State", false);
   SmartDashboard::PutBoolean("Down Hook 1 Engage State", false);
   SmartDashboard::PutBoolean("Down Hook 2 Engage State", false);
}

// Make this return true when this Command no longer needs to run execute()
bool TestSmartDashboard::IsFinished()
{
	return false;
}

// Called once after isFinished returns true
void TestSmartDashboard::End() 
{
	
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void TestSmartDashboard::Interrupted() 
{

}
