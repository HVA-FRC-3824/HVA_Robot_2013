// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.



#include "CypressGotoPosition.h"

CypressGotoPosition::CypressGotoPosition() 
{
	// Call other Constructor. This constructor should not be used.
	CypressGotoPosition(0.0,0.0);
}

CypressGotoPosition::CypressGotoPosition(double angle, double velocity, bool isRPM)
{
	// Read in the parameters and store them
	m_angle = angle;
	m_velocity = velocity;
	m_isRPM = isRPM;
}

void CypressGotoPosition::Initialize()
{
	printf("IN Cypress Initialize\n");
	// Check to see if automated shooter position
	if (!(DriverStation::GetInstance()->GetEnhancedIO().GetDigital(INPUT_SHOOTER_ANGLE_ADJUSTMENT_MANUAL)) == false)
	{
		AddParallel(new SetShooterAngle(m_angle));
	}
	
	// Check to see if automated shooter speed
	if (!(DriverStation::GetInstance()->GetEnhancedIO().GetDigital(INPUT_SHOOTER_SPEED_ADJUSTMENT_MANUAL)) == false)
	{
		AddParallel(new SetShooterSpeed(m_velocity, m_isRPM));
	}
}

void CypressGotoPosition::End()
{
	GetRequirements().clear();
}

void CypressGotoPosition::Interrupted()
{
	End();
}
