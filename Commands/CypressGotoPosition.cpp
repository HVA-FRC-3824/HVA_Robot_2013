// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "CypressGotoPosition.h"
#include "SetShooterAngle.h"
#include "SetShooterSpeed.h"
CypressGotoPosition::CypressGotoPosition() 
{
	CypressGotoPosition(0.0, 0.0, 0.0, false);
}
CypressGotoPosition::CypressGotoPosition(double angle, double velocity, double voltage, bool isRPM)
{
	// Read in the parameters and store them
	m_angle         = angle;
	m_velocity      = velocity;
	m_voltage       = voltage;
	m_isRPM         = isRPM;
	setShooterAngle = NULL;
	setShooterSpeed = NULL;
}
// Called just before this Command runs the first time
void CypressGotoPosition::Initialize() 
{
	// Check to see if automated shooter position
	if (!(DriverStation::GetInstance()->GetEnhancedIO().GetDigital(INPUT_SHOOTER_ANGLE_ADJUSTMENT_MANUAL)) == false)
	{
	   // determine if the shooter angle command class needs to be constructed
		if ((setShooterAngle == NULL) || (!setShooterAngle->IsRunning()))
		{
			// If the command is created delete
			if (setShooterAngle != NULL)
			{
			   // remove the shooter angle command class
				delete(setShooterAngle);
			}
			
			// set the shooter angle from the member variable
			setShooterAngle = new SetShooterAngle(m_angle);
			
			// start the shooter angle command class
			setShooterAngle->Start();
		}
		else
		{
		   // shooter angle is running so stop 
			setShooterAngle->Cancel();
		}
	}
	
	// Check to see if automated shooter speed
	if (!(DriverStation::GetInstance()->GetEnhancedIO().GetDigital(INPUT_SHOOTER_SPEED_ADJUSTMENT_MANUAL)) == false)
	{
      // determine if the shooter speed command class needs to be constructed
		if ((setShooterSpeed == NULL) || (!setShooterSpeed->IsRunning()))
		{
			// If the command is created delete
			if (setShooterSpeed != NULL)
			{
            // remove the shooter speed command class
				delete(setShooterSpeed);
			}
			
         // set the shooter speed from the member variable
			if (m_isRPM == true)		   
			   setShooterSpeed = new SetShooterSpeed(m_velocity, true);
			else
            setShooterSpeed = new SetShooterSpeed(m_voltage, false);
         // start the shooter speed command class
			setShooterSpeed->Start();
		}
		else
		{
         // shooter speed is running so stop 
			setShooterSpeed->Cancel();
		}
	}
}
// Called repeatedly when this Command is scheduled to run
void CypressGotoPosition::Execute() 
{
	
}
// Make this return true when this Command no longer needs to run execute()
bool CypressGotoPosition::IsFinished() 
{
	return true;
}
// Called once after isFinished returns true
void CypressGotoPosition::End() 
{
   
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void CypressGotoPosition::Interrupted() 
{
	End();
}
