// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.

#include "AutonomousRPMShootingwithPickupFirst.h"
#include "AutonomousRPMShootingwithPickup.h"
#include "SetShooterSpeed.h"
#include "SetShooterAngle.h"
#include "FrisbeeRapidShoot.h"
#include "ChassisDriveDistance.h"
#include "ChassisDriveDistanceStraight.h"
#include "FrisbeePickup.h"
#include "ChassisDriveDistanceSidewaysStrainght.h"
#include "ChassisTurnAngle.h"
#include "ChassisDrivetoWallStraight.h"
#include "SetPickupPosition.h"

#define DRIVE_UNDER_TOWER_DISTANCE         62.25
#define TURN_LEFT_ANGLE                   -14.0
#define TURN_RIGHT_ANGLE                   16.0
#define FIRST_SHOOT_ANGLE_OFFSET		   -1.0

AutonomousRPMShootingwithPickupFirst::AutonomousRPMShootingwithPickupFirst()
{
   // set the shooter angle to get below the tower
   // NOTE: Shooter angle should already be set before match
   AddParallel(new SetShooterAngle(SHOOTER_ANGLE_FOR_PICKUP), 3.0);
   
   // start the shooter
   AddParallel(new SetShooterSpeed(SHOOTER_SPEED_BACK_OF_TOWER, true), 3.0);

   // drive straight to get the first Frisbee
   //AddSequential(new ChassisDriveDistanceStraight(0.4, 0.4), 3.0);
   AddSequential(new ChassisDrivetoWallStraight(DRIVE_UNDER_TOWER_DISTANCE, 0.35));

   // wait to allow the robot to move under the tower
   AddSequential(new WaitCommand(0.1));
   
   // pick up the Frisbee
   AddSequential(new FrisbeePickup());
   
   // set the shooter angle for under the tower
   AddSequential(new SetShooterAngle(SHOOTER_ANGLE_UNDER_TOWER), 2.0);
   
   // shoot 3 Frisbees as fast as possible (it waits on the speed to be correct)
   //AddSequential(new FrisbeeRapidShoot(3), 10.0);
   // Note: Should not have to wait since the Set Shooter Spped command will
   //       not return until the shooter is up to speed
   //AddSequential(new WaitCommand(1.0));
   AddSequential(new WaitCommand(0.2));
   AddSequential(new FrisbeeShoot());
   AddSequential(new WaitCommand(0.1));
   AddSequential(new FrisbeeShoot());
   AddSequential(new WaitCommand(0.1));
   AddSequential(new FrisbeeShoot());
   AddSequential(new WaitCommand(0.1));
   AddSequential(new FrisbeeShoot());
   
   // lower the shooter to pickup the Frisbees (basically all the way down)
   AddParallel(new SetShooterAngle(SHOOTER_ANGLE_FOR_PICKUP), 3.0);

   // turn and drive forward slightly to get the next Frisbee
   AddSequential(new ChassisTurnAngle(TURN_LEFT_ANGLE));
   //AddSequential(new ChassisDriveDistance(0.08, 0.3));

   // pick up the Frisbee
   AddSequential(new FrisbeePickup());

   // set the shooter angle fdor under the tower
   AddParallel(new SetShooterAngle(SHOOTER_ANGLE_UNDER_TOWER), 3.0);

   // turn back to the goal
   AddSequential(new ChassisTurnAngle(TURN_RIGHT_ANGLE), 2.0);
   
   // shoot the Frisbees
   AddSequential(new WaitCommand(1.2));
   AddSequential(new FrisbeeShoot());
   AddSequential(new WaitCommand(0.1));
   AddSequential(new FrisbeeShoot());
   
   // Move the arm to the home position
   AddParallel(new SetPickupPosition(PICKUP_HOME_POSITION), 1.0);
   	
   // lower the shooter to allow driving out from under the tower
   AddSequential(new SetShooterAngle(SHOOTER_ANGLE_FOR_PICKUP), 2.0);
   
   // back up from tower
   AddSequential(new ChassisDriveDistanceStraight(1.0, -0.8), 3.0);
}
