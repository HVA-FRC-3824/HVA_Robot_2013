// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/AutonomousDoNothing.h"
#include "Commands/AutonomousShootfromCenter.h"
#include "Commands/AutonomousShootfromLeft.h"
#include "Commands/AutonomousShootfromRight.h"
#include "Commands/ChassisDriveDistance.h"
#include "Commands/ChassisDrivetoWall.h"
#include "Commands/ChassisTurnAngle.h"
#include "Commands/ClimbNextLevel.h"
#include "Commands/ClimberExtended.h"
#include "Commands/ClimberRetract.h"
#include "Commands/DisplayPumpState.h"
#include "Commands/DisplayShooterAngle.h"
#include "Commands/DisplayShooterSpeed.h"
#include "Commands/EngageTower.h"
#include "Commands/FrisbeeAimAndShoot.h"
#include "Commands/FrisbeeShoot.h"
#include "Commands/PullUpOnTower.h"
#include "Commands/SetShooterAngle.h"
#include "Commands/Teleoperated.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() 
{
	// Process operator interface input here.
   // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	driveJoystick = new Joystick(1);
	
	shootDiskButton = new JoystickButton(driveJoystick, 1);
	shootDiskButton->WhenPressed(new FrisbeeShoot());
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("Autonomous Shoot from Center", new AutonomousShootfromCenter());
	SmartDashboard::PutData("Autonomous Shoot from Right", new AutonomousShootfromRight());
	SmartDashboard::PutData("Autonomous Shoot from Left", new AutonomousShootfromLeft());
	SmartDashboard::PutData("Teleoperated", new Teleoperated());
	SmartDashboard::PutData("Climber Extended", new ClimberExtended());
	SmartDashboard::PutData("Climber Retract", new ClimberRetract());
	SmartDashboard::PutData("Engage Tower", new EngageTower());
	SmartDashboard::PutData("Pull Up On Tower", new PullUpOnTower());
	SmartDashboard::PutData("Climb Next Level", new ClimbNextLevel());
	SmartDashboard::PutData("Chassis Drive to Wall", new ChassisDrivetoWall());
	SmartDashboard::PutData("Frisbee Shoot", new FrisbeeShoot());
	SmartDashboard::PutData("Frisbee Aim And Shoot", new FrisbeeAimAndShoot());
	SmartDashboard::PutData("Display Shooter Speed", new DisplayShooterSpeed());
	SmartDashboard::PutData("Display Pump State", new DisplayPumpState());
	SmartDashboard::PutData("Display Shooter Angle", new DisplayShooterAngle());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::getDriveJoystick() {
	return driveJoystick;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
