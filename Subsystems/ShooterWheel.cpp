// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "ShooterWheel.h"
#include "../Robotmap.h"
ShooterWheel::ShooterWheel() : Subsystem("ShooterWheel")
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	motor = RobotMap::shooterWheelMotor;
	encoder = RobotMap::shooterWheelEncoder;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	pidEncoder = new PIDGearTooth(encoder);
	PIDcontroller = new PIDController(
	      SmartDashboard::GetNumber("Shooter Speed P Term:"),
	      SmartDashboard::GetNumber("Shooter Speed I Term:"), 
	      SmartDashboard::GetNumber("Shooter Speed D Term:"),
	      pidEncoder, motor);
	PIDcontroller->Enable();
	PIDcontroller->SetSetpoint(0);
}
    
void ShooterWheel::InitDefaultCommand()
{
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
void ShooterWheel::SetWheelSpeed(float speed)
{
   motor->Set(speed);
}
